// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

model User {
  id          String  @id @default(uuid())
  firstName    String
  lastName    String
  email       String  @unique
  imageSrc    String?
  home        Home[]  @relation("UserToHome")
  favorite    Favorite[]
  reservation Reservation[]

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Home {
  id            String @id @default(uuid())
  title         String?
  description   String?
  guests        String?
  bedrooms      String?
  bathrooms     String?
  country       String?
  photo         String?
  price         Int?
  categoryName  String?
  favorite      Favorite[]
  reservation   Reservation[]

  addedCategory    Boolean @default(false)
  addedDescription Boolean @default(false)
  addedLocation    Boolean @default(false)

  user        User?  @relation("UserToHome", fields: [userId], references: [id], onDelete: Cascade)
  userId      String?

  createdAt   DateTime @default(now())
  updatedAt   DateTime  @updatedAt
}

model Favorite {
  id String  @id @default(uuid())

  user       User?  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String?
  home       Home?   @relation(fields: [homeId], references: [id], onDelete: Cascade)
  homeId     String?

  createdAt  DateTime @default(now())
  updatedAt  DateTime  @updatedAt
}

model Reservation {
  id String @id @default(uuid())

  startDate DateTime
  endDate DateTime
  createdAt  DateTime @default(now())

  user       User?  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String?
  home       Home?   @relation(fields: [homeId], references: [id], onDelete: Cascade)
  homeId     String?
}