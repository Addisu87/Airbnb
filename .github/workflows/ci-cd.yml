name: CI/CD for Next.js with Supabase

# Trigger the workflow on push or pull request to main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Environment variables available to all jobs
env:
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}

jobs:
  # Job 1: Lint and Test
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Use the Node version your project requires

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint # Assumes you have a lint script like "eslint ."

      - name: Run tests
        run: npm test # Assumes you have a test script like "jest"

  # Job 2: Build
  build:
    runs-on: ubuntu-latest
    needs: lint-and-test # Only runs if lint-and-test succeeds
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build # Assumes "build": "next build" in package.json

  # Job 3: Deploy to Vercel
  deploy:
    runs-on: ubuntu-latest
    needs: build # Only runs if build succeeds
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Only deploy on push to main
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel environment
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build and deploy to Vercel
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
